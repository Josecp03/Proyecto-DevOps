name: Ansible - Backups

on:
  push:
    branches:
      - main
    paths:
      - 'ansible/playbooks/bkp.yml'
      - 'ansible/roles/backup/**'
      - 'ansible/inventories/dev/group_vars/backups.yml'
  workflow_dispatch:

jobs:
  bkp:
    runs-on: ubuntu-latest
    env:
      # Variables de Azure para Terraform
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    steps:
      # 1. Checkout repo
      - uses: actions/checkout@v4

      # 2. Setup Python & Ansible
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - run: |
          pip install ansible-core==2.17.8 ansible-lint jq

      # 3. Setup SSH
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ANSIBLE_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      # 4. Vault password
      - name: Vault password
        run: echo "${{ secrets.ANSIBLE_VAULT_PASSWORD }}" > ~/.vault_pass.txt

      # 5. Instalar Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      # 6. Terraform Init
      - name: Terraform Init
        working-directory: iac
        run: terraform init -input=false -reconfigure

      # 7. Obtener outputs de Terraform
      - name: Get Terraform outputs
        working-directory: iac
        run: terraform output -json > tf_outputs.json

      # 8. Generar inventario dinÃ¡mico
      - name: Generate Ansible inventory
        working-directory: ansible
        run: |
          bkp_ip=$(jq -r .vm_bkp_public_ip.value ../iac/tf_outputs.json)
          db_ip=$(jq -r .vm_db_private_ip.value ../iac/tf_outputs.json)

          cat > inventories/dev/inventory.ini <<EOF
          [bkp]
          ${bkp_ip} ansible_user=azureuser

          [db]
          ${db_ip} ansible_user=azureuser ansible_ssh_common_args='-o ProxyCommand="ssh -W %h:%p -q azureuser@${bkp_ip}"'
          EOF

          echo "Generated inventory:"
          cat inventories/dev/inventory.ini

      # 9. Instalar dependencias de Ansible
      - name: Install requirements
        working-directory: ansible
        run: ansible-galaxy collection install -r requirements.yml

      # 10. Ejecutar playbook de backup
      - name: Run Backup Playbook
        working-directory: ansible
        run: ansible-playbook -i inventories/dev/inventory.ini playbooks/bkp.yml --vault-password-file ~/.vault_pass.txt
